package com.bluekai.ds.pojo;

/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class UserProfile extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"UserProfile\",\"fields\":[{\"name\":\"uuid\",\"type\":[\"string\"]},{\"name\":\"site_id\",\"type\":\"int\"},{\"name\":\"ns\",\"type\":\"int\"},{\"name\":\"cat\",\"type\":\"int\"},{\"name\":\"last_ts\",\"type\":\"int\"},{\"name\":\"freq\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.Object uuid;
  @Deprecated public int site_id;
  @Deprecated public int ns;
  @Deprecated public int cat;
  @Deprecated public int last_ts;
  @Deprecated public int freq;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public UserProfile() {}

  /**
   * All-args constructor.
   */
  public UserProfile(java.lang.Object uuid, java.lang.Integer site_id, java.lang.Integer ns, java.lang.Integer cat, java.lang.Integer last_ts, java.lang.Integer freq) {
    this.uuid = uuid;
    this.site_id = site_id;
    this.ns = ns;
    this.cat = cat;
    this.last_ts = last_ts;
    this.freq = freq;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return uuid;
    case 1: return site_id;
    case 2: return ns;
    case 3: return cat;
    case 4: return last_ts;
    case 5: return freq;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: uuid = (java.lang.Object)value$; break;
    case 1: site_id = (java.lang.Integer)value$; break;
    case 2: ns = (java.lang.Integer)value$; break;
    case 3: cat = (java.lang.Integer)value$; break;
    case 4: last_ts = (java.lang.Integer)value$; break;
    case 5: freq = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'uuid' field.
   */
  public java.lang.Object getUuid() {
    return uuid;
  }

  /**
   * Sets the value of the 'uuid' field.
   * @param value the value to set.
   */
  public void setUuid(java.lang.Object value) {
    this.uuid = value;
  }

  /**
   * Gets the value of the 'site_id' field.
   */
  public java.lang.Integer getSiteId() {
    return site_id;
  }

  /**
   * Sets the value of the 'site_id' field.
   * @param value the value to set.
   */
  public void setSiteId(java.lang.Integer value) {
    this.site_id = value;
  }

  /**
   * Gets the value of the 'ns' field.
   */
  public java.lang.Integer getNs() {
    return ns;
  }

  /**
   * Sets the value of the 'ns' field.
   * @param value the value to set.
   */
  public void setNs(java.lang.Integer value) {
    this.ns = value;
  }

  /**
   * Gets the value of the 'cat' field.
   */
  public java.lang.Integer getCat() {
    return cat;
  }

  /**
   * Sets the value of the 'cat' field.
   * @param value the value to set.
   */
  public void setCat(java.lang.Integer value) {
    this.cat = value;
  }

  /**
   * Gets the value of the 'last_ts' field.
   */
  public java.lang.Integer getLastTs() {
    return last_ts;
  }

  /**
   * Sets the value of the 'last_ts' field.
   * @param value the value to set.
   */
  public void setLastTs(java.lang.Integer value) {
    this.last_ts = value;
  }

  /**
   * Gets the value of the 'freq' field.
   */
  public java.lang.Integer getFreq() {
    return freq;
  }

  /**
   * Sets the value of the 'freq' field.
   * @param value the value to set.
   */
  public void setFreq(java.lang.Integer value) {
    this.freq = value;
  }

  /** Creates a new UserProfile RecordBuilder */
  public static UserProfile.Builder newBuilder() {
    return new UserProfile.Builder();
  }
  
  /** Creates a new UserProfile RecordBuilder by copying an existing Builder */
  public static UserProfile.Builder newBuilder(UserProfile.Builder other) {
    return new UserProfile.Builder(other);
  }
  
  /** Creates a new UserProfile RecordBuilder by copying an existing UserProfile instance */
  public static UserProfile.Builder newBuilder(UserProfile other) {
    return new UserProfile.Builder(other);
  }
  
  /**
   * RecordBuilder for UserProfile instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<UserProfile>
    implements org.apache.avro.data.RecordBuilder<UserProfile> {

    private java.lang.Object uuid;
    private int site_id;
    private int ns;
    private int cat;
    private int last_ts;
    private int freq;

    /** Creates a new Builder */
    private Builder() {
      super(UserProfile.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(UserProfile.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.uuid)) {
        this.uuid = data().deepCopy(fields()[0].schema(), other.uuid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.site_id)) {
        this.site_id = data().deepCopy(fields()[1].schema(), other.site_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.ns)) {
        this.ns = data().deepCopy(fields()[2].schema(), other.ns);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.cat)) {
        this.cat = data().deepCopy(fields()[3].schema(), other.cat);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.last_ts)) {
        this.last_ts = data().deepCopy(fields()[4].schema(), other.last_ts);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.freq)) {
        this.freq = data().deepCopy(fields()[5].schema(), other.freq);
        fieldSetFlags()[5] = true;
      }
    }
    
    /** Creates a Builder by copying an existing UserProfile instance */
    private Builder(UserProfile other) {
            super(UserProfile.SCHEMA$);
      if (isValidValue(fields()[0], other.uuid)) {
        this.uuid = data().deepCopy(fields()[0].schema(), other.uuid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.site_id)) {
        this.site_id = data().deepCopy(fields()[1].schema(), other.site_id);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.ns)) {
        this.ns = data().deepCopy(fields()[2].schema(), other.ns);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.cat)) {
        this.cat = data().deepCopy(fields()[3].schema(), other.cat);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.last_ts)) {
        this.last_ts = data().deepCopy(fields()[4].schema(), other.last_ts);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.freq)) {
        this.freq = data().deepCopy(fields()[5].schema(), other.freq);
        fieldSetFlags()[5] = true;
      }
    }

    /** Gets the value of the 'uuid' field */
    public java.lang.Object getUuid() {
      return uuid;
    }
    
    /** Sets the value of the 'uuid' field */
    public UserProfile.Builder setUuid(java.lang.Object value) {
      validate(fields()[0], value);
      this.uuid = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'uuid' field has been set */
    public boolean hasUuid() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'uuid' field */
    public UserProfile.Builder clearUuid() {
      uuid = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'site_id' field */
    public java.lang.Integer getSiteId() {
      return site_id;
    }
    
    /** Sets the value of the 'site_id' field */
    public UserProfile.Builder setSiteId(int value) {
      validate(fields()[1], value);
      this.site_id = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'site_id' field has been set */
    public boolean hasSiteId() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'site_id' field */
    public UserProfile.Builder clearSiteId() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'ns' field */
    public java.lang.Integer getNs() {
      return ns;
    }
    
    /** Sets the value of the 'ns' field */
    public UserProfile.Builder setNs(int value) {
      validate(fields()[2], value);
      this.ns = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'ns' field has been set */
    public boolean hasNs() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'ns' field */
    public UserProfile.Builder clearNs() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'cat' field */
    public java.lang.Integer getCat() {
      return cat;
    }
    
    /** Sets the value of the 'cat' field */
    public UserProfile.Builder setCat(int value) {
      validate(fields()[3], value);
      this.cat = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'cat' field has been set */
    public boolean hasCat() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'cat' field */
    public UserProfile.Builder clearCat() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'last_ts' field */
    public java.lang.Integer getLastTs() {
      return last_ts;
    }
    
    /** Sets the value of the 'last_ts' field */
    public UserProfile.Builder setLastTs(int value) {
      validate(fields()[4], value);
      this.last_ts = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'last_ts' field has been set */
    public boolean hasLastTs() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'last_ts' field */
    public UserProfile.Builder clearLastTs() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'freq' field */
    public java.lang.Integer getFreq() {
      return freq;
    }
    
    /** Sets the value of the 'freq' field */
    public UserProfile.Builder setFreq(int value) {
      validate(fields()[5], value);
      this.freq = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'freq' field has been set */
    public boolean hasFreq() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'freq' field */
    public UserProfile.Builder clearFreq() {
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    public UserProfile build() {
      try {
        UserProfile record = new UserProfile();
        record.uuid = fieldSetFlags()[0] ? this.uuid : (java.lang.Object) defaultValue(fields()[0]);
        record.site_id = fieldSetFlags()[1] ? this.site_id : (java.lang.Integer) defaultValue(fields()[1]);
        record.ns = fieldSetFlags()[2] ? this.ns : (java.lang.Integer) defaultValue(fields()[2]);
        record.cat = fieldSetFlags()[3] ? this.cat : (java.lang.Integer) defaultValue(fields()[3]);
        record.last_ts = fieldSetFlags()[4] ? this.last_ts : (java.lang.Integer) defaultValue(fields()[4]);
        record.freq = fieldSetFlags()[5] ? this.freq : (java.lang.Integer) defaultValue(fields()[5]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
